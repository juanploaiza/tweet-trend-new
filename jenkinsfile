def registry = 'https://juanploaiza.jfrog.io'
def imageName = 'juanploaiza.jfrog.io/ttrend-docker-local/ttrend'
def version   = '2.1.3'
pipeline {
    agent {
        label 'maven'
    }
    environment {
        PATH = "/opt/apache-maven-3.9.9/bin:$PATH"
    }
    tools {
        jfrog 'jfrog-cli'
    }
    stages {
        stage('build') {
            steps {
                echo "--------- build started --------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "--------- build completed --------"
            }
        }
        stage('test') {
            steps {
                echo "--------- test started --------"
                sh 'mvn surefire-report:report'
                echo "--------- test completed --------"
            }
        }
        stage("SonarQube analysis") {
            steps {
                echo "--------- SonarQube analysis started --------"
              withSonarQubeEnv(credentialsId: 'sonar-cred', installationName: 'SonarQube') {
                sh "mvn sonar:sonar -Dsonar.projectKey=juanploaiza_demo-workshop"
              }
                echo "--------- SonarQube analysis completed --------"
            }
          }
        stage("Quality Gate") {
            steps {
                script{
                    timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
          }
        }
        stage("Jar Publish") {
            steps {
                echo '<--------------- Jar Publish Started --------------->'
                jf 'rt u jarstaging/(*.jar) ttrend-libs-release-local/{1} --server-id=jfrog'
                jf 'rt u jarstaging/(*.pom) ttrend-libs-release-local/{1} --server-id=jfrog'
                echo '<--------------- Jar Publish Ended --------------->'
            }
        }
        stage(" Docker Build ") {
          steps {
            script {
               echo '<--------------- Docker Build Started --------------->'
               app = docker.build(imageName+":"+version)
               echo '<--------------- Docker Build Ends --------------->'
            }
          }
        }
        stage (" Docker Publish "){
            steps {
                script {
                   echo '<--------------- Docker Publish Started --------------->'  
                    docker.withRegistry(registry, 'jfrog-cred'){
                        app.push()
                    }
                   echo '<--------------- Docker Publish Ended --------------->'  
                }
            }
        }
        stage ("Deploy") {
            steps {
                script {
                    sh 'helm install ttrend ttrend-0.1.0.tgz'
                }
            }
        }
        // stage ("Deploy") {
        //     steps {
        //         withCredentials([file(credentialsId: 'jfrog_secret', variable: 'secretFile')]) {
        //             sh 'cat $secretFile > secret.yaml'
        //         }
        //         script {
        //             sh './deploy.sh'
        //         }
        //     }
        // }
    }
}