pipeline {
    agent {
        label 'maven'
    }
    environment {
        PATH = "/opt/apache-maven-3.9.9/bin:$PATH"
    }
    tools {
        jfrog 'jfrog-cli'
    }
    stages {
        stage('build') {
            steps {
                echo "--------- build started --------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "--------- build completed --------"
            }
        }
        stage('test') {
            steps {
                echo "--------- test started --------"
                sh 'mvn surefire-report:report'
                echo "--------- test completed --------"
            }
        }
        stage("SonarQube analysis") {
            steps {
                echo "--------- SonarQube analysis started --------"
              withSonarQubeEnv(credentialsId: 'sonar-cred', installationName: 'SonarQube') {
                sh "mvn sonar:sonar -Dsonar.projectKey=juanploaiza_demo-workshop"
              }
                echo "--------- SonarQube analysis completed --------"
            }
          }
        stage("Quality Gate") {
            steps {
                script{
                    timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
          }
        }
        stage("Jar Publish") {
        steps {
            rtUpload (
                serverId: "jfrog",
                spec: """{
                        "files": [
                                {
                                    "pattern": "jarstaging/(*)",
                                    "target": "libs-release-local/{1}",
                                    "excludePatterns": ["**/*.md5", "**/*.sha1"]
                                }
                        ]
                }"""
             )
         }
        }
    }
}